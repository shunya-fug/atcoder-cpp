#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t N, std::string S)
{
    int64_t ans = 0;
    REP(i, 1000)
    {
        string s = to_string(i);
        s = string(max(0, 3 - (int)s.size()), '0') + s;
        int search_start = 0;
        bool correct = true;
        REP(i, 3)
        {
            auto pos = S.find(s[i], search_start);
            if (pos == string::npos)
            {
                correct = false;
                break;
            }
            search_start = pos + 1;
        }
        if (correct)
        {
            ans++;
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N;
    std::string S;
    std::cin >> N >> S;
    auto ans = solve(N, S);
    std::cout << ans << '\n';
    return 0;
}

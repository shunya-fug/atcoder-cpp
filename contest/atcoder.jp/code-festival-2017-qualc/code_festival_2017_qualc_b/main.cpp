#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, const std::vector<int64_t> &A)
{
    int64_t ans = 0;
    vector<int64_t> sub(N);

    auto search_similar = [&N, &A, &ans, &sub](auto self, int index)
    {
        if (index == N)
        {
            REP(i, N)
            {
                if ((A[i] - sub[i]) % 2 == 0)
                {
                    ans++;
                    break;
                }
            }
            return;
        }

        REP(i, 3)
        {
            // 0,1,2 -> -1,0,1
            sub[index] = i - 1;
            self(self, index + 1);
        }
    };
    search_similar(search_similar, 0);

    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<int64_t> A(N);
    REP(i, N)
    {
        std::cin >> A[i];
    }
    auto ans = solve(N, A);
    std::cout << ans << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

vector<int64_t> solve(int N, const std::vector<int64_t> &A, int Q, const std::vector<int64_t> &l, const std::vector<int64_t> &r)
{
    vector<int64_t> f_A(N);
    REP3(i, 1, N)
    {
        if (i % 2 == 0)
        {
            f_A[i] = f_A[i - 1] + A[i] - A[i - 1];
        }
        else
        {
            f_A[i] = f_A[i - 1];
        }
    }

    auto f = [&](auto t)
    {
        const auto j = upper_bound(begin(A) + 1, end(A), t) - begin(A) - 1;
        return f_A[j] + (f_A[j + 1] - f_A[j]) / (A[j + 1] - A[j]) * (t - A[j]);
    };
    vector<int64_t> ans(Q);
    REP(i, Q)
    {
        ans[i] = f(r[i]) - f(l[i]);
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, Q;
    std::cin >> N;
    std::vector<int64_t> A(N);
    REP(i, N)
    {
        std::cin >> A[i];
    }
    std::cin >> Q;
    std::vector<int64_t> l(Q), r(Q);
    REP(i, Q)
    {
        std::cin >> l[i] >> r[i];
    }
    auto ans = solve(N, A, Q, l, r);
    REP(i, Q)
    {
        std::cout << ans[i] << '\n';
    }
    return 0;
}

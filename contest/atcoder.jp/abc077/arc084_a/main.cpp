#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, std::vector<int64_t> &A, std::vector<int64_t> &B, std::vector<int64_t> &C)
{
    ranges::sort(A);
    ranges::sort(C);

    int64_t ans = 0;
    for (auto b : B)
    {
        auto a = ranges::lower_bound(A, b) - begin(A),
             c = end(C) - ranges::upper_bound(C, b);
        ans += a * c;
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<int64_t> A(N), B(N), C(N);
    REP(i, N)
    {
        std::cin >> A[i];
    }
    REP(i, N)
    {
        std::cin >> B[i];
    }
    REP(i, N)
    {
        std::cin >> C[i];
    }
    auto ans = solve(N, A, B, C);
    std::cout << ans << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t N, int64_t M, int64_t D, std::vector<int64_t> &A, std::vector<int64_t> &B)
{
    ranges::sort(A);
    ranges::sort(B);

    int64_t ans = -1;
    for (auto a : A)
    {
        auto l = ranges::lower_bound(B, a - D),
             r = ranges::lower_bound(B, a + D);
        if (abs(a - *l) <= D)
        {
            ans = max(ans, a + *l);
        }
        if (abs(a - *r) <= D)
        {
            ans = max(ans, a + *r);
        }
        else if (r != begin(B) and abs(a - *prev(r)) <= D)
        {
            ans = max(ans, a + *prev(r));
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, M, D;
    std::cin >> N >> M >> D;
    std::vector<int64_t> A(N), B(M);
    REP(i, N)
    {
        std::cin >> A[i];
    }
    REP(i, M)
    {
        std::cin >> B[i];
    }
    auto ans = solve(N, M, D, A, B);
    std::cout << ans << '\n';
    return 0;
}

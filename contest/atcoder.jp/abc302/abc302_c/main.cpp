#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

const std::string YES = "Yes";
const std::string NO = "No";
bool solve(int N, int M, const std::vector<std::string> &S)
{
    vector<int> p(N);
    iota(ALL(p), 0);

    do
    {
        bool correct = true;
        REP(i, p.size() - 1)
        {
            int cnt = 0;
            REP(j, M)
            {
                if (S[p[i]][j] != S[p[i + 1]][j])
                {
                    cnt++;
                }
            }
            if (cnt != 1)
            {
                correct = false;
                break;
            }
        }
        if (correct)
        {
            return true;
        }
    } while (next_permutation(ALL(p)));
    return false;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, M;
    std::cin >> N >> M;
    std::vector<std::string> S(N);
    REP(i, N)
    {
        std::cin >> S[i];
    }
    auto ans = solve(N, M, S);
    std::cout << (ans ? YES : NO) << '\n';
    return 0;
}

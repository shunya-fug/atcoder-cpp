#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

struct Card
{
    string s;
    int64_t n;

    Card(pair<const string, int64_t> p) : s(p.first), n(p.second) {}
};

int64_t solve(int N, const std::vector<std::string> &s, int M, const std::vector<std::string> &t)
{
    map<string, int64_t> blue, red;
    for (auto s : s)
    {
        blue[s]++;
    }
    for (auto t : t)
    {
        red[t]++;
    }

    int64_t ans = 0;
    for (Card blue_card : blue)
    {
        ans = max(ans, blue_card.n - red[blue_card.s]);
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, M;
    std::cin >> N;
    std::vector<std::string> s(N);
    REP(i, N)
    {
        std::cin >> s[i];
    }
    std::cin >> M;
    std::vector<std::string> t(M);
    REP(i, M)
    {
        std::cin >> t[i];
    }
    auto ans = solve(N, s, M, t);
    std::cout << ans << '\n';
    return 0;
}

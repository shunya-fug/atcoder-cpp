#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, int K, int P, const vector<int64_t> &C, const vector<vector<int64_t>> &A)
{
    // dp[パラメーターの値][機能] = 最小コスト
    vector<vector<int64_t>> dp(P + 1, vector<int64_t>(K, 1e18));
    ranges::fill(dp.front(), 0);
    REP(i, N)
    REP(j, A.front().size())
    {
        REP_R(p, dp.size() - A[i][j])
        {
            if (p + A[i][j] < dp.size())
            {
                dp[p + A[i][j]][j] = min(dp[p + A[i][j]][j], dp[p][j] + C[i]);
            }
            else
            {
                // 案を採用した結果パラメーターがPを超える場合
                dp.back()[j] = min(dp.back()[j], dp[p][j] + C[i]);
            }
        }
    }

    auto cost = *ranges::max_element(dp.back());
    return cost == 1e18 ? -1 : cost + 1;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, K, P;
    std::cin >> N >> K >> P;
    std::vector<int64_t> C(N);
    vector<vector<int64_t>> A(N, vector<int64_t>(K));
    REP(i, N)
    {
        std::cin >> C[i];
        REP(j, K)
        {
            cin >> A[i][j];
        }
    }
    auto ans = solve(N, K, P, C, A);
    std::cout << ans << '\n';
    return 0;
}

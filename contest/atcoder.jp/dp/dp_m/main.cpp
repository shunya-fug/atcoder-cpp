#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
#include <atcoder/modint.hpp>

constexpr int64_t MOD = 1000000007;
using mint = atcoder::modint1000000007;

int64_t solve(int N, int64_t K, const std::vector<int64_t> &a)
{
    // dp[子供の番号][受け取る飴の個数] = 通り数
    vector<vector<mint>> dp(N + 1, vector<mint>(K + 1));
    dp[0][0] = 1;
    REP(i, N)
    {
        // 累積和
        vector<mint> running_sum(K + 2);
        REP(j, K + 1)
        {
            running_sum[j + 1] = running_sum[j] + dp[i][j];
        }

        REP(j, K + 1)
        {
            dp[i + 1][j] = running_sum[j + 1] - running_sum[max(0, j - (int)a[i])];
        }
    }
    return dp[N][K].val();
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    int64_t K;
    std::cin >> N;
    std::vector<int64_t> a(N);
    std::cin >> K;
    REP(i, N)
    {
        std::cin >> a[i];
    }
    auto ans = solve(N, K, a);
    std::cout << ans << '\n';
    return 0;
}

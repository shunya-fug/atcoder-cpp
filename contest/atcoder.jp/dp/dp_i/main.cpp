#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

double solve(int N, const std::vector<double> &p)
{
    // dp[投げた枚数][表の枚数] = 確率
    vector<vector<double>> dp(N + 1, vector<double>(N + 1));
    dp.front().front() = 1.0;
    REP(i, N)
    {
        REP(j, i + 1)
        {
            // 次が表
            dp[i + 1][j + 1] += dp[i][j] * p[i];
            // 次が裏
            dp[i + 1][j] += dp[i][j] * (1.0 - p[i]);
        }
    }
    return reduce(dp.back().begin() + N / 2 + 1, dp.back().end());
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<double> p(N);
    REP(i, N)
    {
        std::cin >> p[i];
    }
    auto ans = solve(N, p);
    std::cout << setprecision(10) << ans << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t N, int64_t M, const std::vector<int64_t> &x, const std::vector<int64_t> &y)
{
    vector<vector<int64_t>> G(N + 1, vector<int64_t>());
    vector<int64_t> in(G.size());
    REP(i, M)
    {
        G[x[i]].push_back(y[i]);
        in[y[i]]++;
    }

    // dp[頂点番号] = 頂点からの最大距離
    vector<int64_t> dp(G.size());
    queue<int64_t> Q;
    REP(i, in.size())
    {
        if (in[i] == 0)
        {
            Q.push(i);
        }
    }
    while (!Q.empty())
    {
        auto from = Q.front();
        Q.pop();
        for (auto to : G[from])
        {
            in[to]--;
            if (in[to] == 0)
            {
                Q.push(to);
                dp[to] = max(dp[to], dp[from] + 1);
            }
        }
    }
    return *ranges::max_element(dp);
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, M;
    std::cin >> N >> M;
    std::vector<int64_t> x(M), y(M);
    REP(i, M)
    {
        std::cin >> x[i] >> y[i];
    }
    auto ans = solve(N, M, x, y);
    std::cout << ans << '\n';
    return 0;
}

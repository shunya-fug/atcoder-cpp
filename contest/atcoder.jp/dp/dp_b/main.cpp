#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, int K, const std::vector<int64_t> &h)
{
    vector<int64_t> cost(N, 1e18);
    cost.front() = 0;
    REP(i, N)
    {
        REP3(j, i + 1, min(i + K + 1, N))
        {
            cost[j] = min(cost[j], cost[i] + abs(h[i] - h[j]));
        }
    }
    return cost.back();
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, K;
    std::cin >> N >> K;
    std::vector<int64_t> h(N);
    REP(i, N)
    {
        std::cin >> h[i];
    }
    auto ans = solve(N, K, h);
    std::cout << ans << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

constexpr int64_t MOD = 1000000007;
int64_t solve(int H, int W, const std::vector<std::vector<char>> &a)
{
    vector<vector<int64_t>> pattern(H, vector<int64_t>(W));
    pattern.front().front() = 1;
    REP(i, H)
    {
        REP(j, W)
        {
            if (a[i][j] == '#')
            {
                continue;
            }

            if (i + 1 < H and a[i + 1][j] != '#')
            {
                pattern[i + 1][j] += pattern[i][j];
                pattern[i + 1][j] %= MOD;
            }
            if (j + 1 < W and a[i][j + 1] != '#')
            {
                pattern[i][j + 1] += pattern[i][j];
                pattern[i][j + 1] %= MOD;
            }
        }
    }
    return pattern.back().back();
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int H, W;
    std::cin >> H >> W;
    std::vector<std::vector<char>> a(H, std::vector<char>((W)));
    REP(j, H)
    {
        REP(i, W)
        {
            std::cin >> a[j][i];
        }
    }
    auto ans = solve(H, W, a);
    std::cout << ans << '\n';
    return 0;
}

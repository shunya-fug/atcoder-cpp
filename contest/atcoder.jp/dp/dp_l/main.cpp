#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, const std::vector<int64_t> &a)
{
    // dp[left][right] = [left, right)の局面でのX-Y
    vector<vector<int64_t>> dp(N + 1, vector<int64_t>(N + 1));
    for (auto len = 1; len <= N; len++)
    {
        for (auto i = 0; i + len <= N; i++)
        {
            auto j = i + len;
            if ((N - len) % 2 == 0)
            {
                // 先手
                dp[i][j] = max(
                    // 左側の石を取った場合
                    dp[i + 1][j] + a[i],
                    // 右側の石を取った場合
                    dp[i][j - 1] + a[j - 1]);
            }
            else
            {
                // 後手
                dp[i][j] = min(dp[i + 1][j] - a[i], dp[i][j - 1] - a[j - 1]);
            }
        }
    }
    return dp[0][N];
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<int64_t> a(N);
    REP(i, N)
    {
        std::cin >> a[i];
    }
    auto ans = solve(N, a);
    std::cout << ans << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

enum Person
{
    undefined,
    taro,
    jiro
};

const std::string FIRST = "First";
const std::string SECOND = "Second";
bool solve(int N, int64_t K, const std::vector<int64_t> &a)
{
    // person[石の個数] = 取った人
    vector<Person> person(K + 1, Person::undefined);
    REP(i, person.size())
    {
        if (person[i] != Person::undefined)
        {
            continue;
        }
        // 石を取る人が未定の場合は太郎君が取る
        person[i] = Person::taro;
        // そこから全てのパターンを次郎君が取ると仮定
        REP(j, N)
        {
            if (i + a[j] < (int)person.size() and person[i + a[j]] == Person::undefined)
            {
                person[i + a[j]] = Person::jiro;
            }
        }
    }
    return person[K] != Person::taro;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    int64_t K;
    std::cin >> N;
    std::vector<int64_t> a(N);
    std::cin >> K;
    REP(i, N)
    {
        std::cin >> a[i];
    }
    auto ans = solve(N, K, a);
    std::cout << (ans ? FIRST : SECOND) << '\n';
    return 0;
}

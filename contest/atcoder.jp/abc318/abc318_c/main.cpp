#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, int64_t D, int64_t P, std::vector<int64_t> &F)
{
    sort(ALL(F), greater<int64_t>());
    int64_t ans = 0;
    for (auto it = F.begin(); it < F.end(); it += D)
    {
        auto sum = accumulate(it, it + D < F.end() ? it + D : F.end(), 0LL);
        ans += sum > P ? P : sum;
    }

    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    int64_t D, P;
    std::cin >> N;
    std::vector<int64_t> F(N);
    std::cin >> D >> P;
    REP(i, N)
    {
        std::cin >> F[i];
    }
    auto ans = solve(N, D, P, F);
    std::cout << ans << '\n';
    return 0;
}

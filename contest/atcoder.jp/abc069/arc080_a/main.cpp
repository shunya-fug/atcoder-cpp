#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

enum multiples_of
{
    four,
    two,
    others
};

const std::string YES = "Yes";
const std::string NO = "No";
bool solve(int N, const std::vector<int64_t> &a)
{
    unordered_map<multiples_of, int> cnt;
    REP(i, N)
    {
        if (a[i] % 4 == 0)
        {
            cnt[multiples_of::four]++;
        }
        else if (a[i] % 2 == 0)
        {
            cnt[multiples_of::two]++;
        }
        else
        {
            cnt[multiples_of::others]++;
        }
    }

    if (cnt[multiples_of::four] + 1 == cnt[multiples_of::others] and N == cnt[multiples_of::four] + cnt[multiples_of::others])
    {
        return true;
    }
    if (cnt[multiples_of::four] < cnt[multiples_of::others])
    {
        return false;
    }
    return true;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<int64_t> a(N);
    REP(i, N)
    {
        std::cin >> a[i];
    }
    auto ans = solve(N, a);
    std::cout << (ans ? YES : NO) << '\n';
    return 0;
}

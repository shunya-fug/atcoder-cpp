#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
#include <atcoder/modint.hpp>

using mint = atcoder::modint998244353;
constexpr int64_t MOD = 998244353;
int64_t solve(int N, int64_t X, const std::vector<int64_t> &T)
{
    // dp[経過した秒数] = 曲が切り替わる確率
    vector<mint> dp(X + 1);
    mint r = ((mint)1) / ((mint)N),
         ans;
    dp[0] = 1;
    if (T[0] > X)
    {
        ans += dp[0] / ((mint)N);
    }
    REP3(t, 1, X + 1)
    {
        REP(j, N)
        {
            if (T[j] <= t)
            {
                dp[t] += dp[t - T[j]];
            }
        }
        dp[t] *= r;
        if (t + T[0] > X)
        {
            ans += dp[t] * r;
        }
    }
    return ans.val();
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, X;
    std::cin >> N >> X;
    std::vector<int64_t> T(N);
    REP(i, N)
    {
        std::cin >> T[i];
    }
    auto ans = solve(N, X, T);
    std::cout << ans << '\n';
    return 0;
}

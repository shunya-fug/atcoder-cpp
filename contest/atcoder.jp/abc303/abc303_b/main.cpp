#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
#include <boost/unordered_map.hpp>

int64_t solve(int N, int M, const std::vector<std::vector<int64_t>> &a)
{
    boost::unordered_map<pair<int64_t, int64_t>, int64_t> pair_list;
    REP3(i, 1, N)
    REP3(j, i + 1, N + 1)
    {
        pair_list[{i, j}] = 0;
    }

    REP(i, M)
    REP(j, N - 1)
    {
        auto x = min(a[i][j], a[i][j + 1]),
             y = max(a[i][j], a[i][j + 1]);
        pair_list[{x, y}]++;
    }

    int64_t ans = 0;
    for (auto n : pair_list | views::values)
    {
        if (n == 0)
        {
            ans++;
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, M;
    std::cin >> N >> M;
    std::vector<std::vector<int64_t>> a(M, std::vector<int64_t>((N)));
    REP(i, M)
    {
        REP(j, N)
        {
            std::cin >> a[i][j];
        }
    }
    auto ans = solve(N, M, a);
    std::cout << ans << '\n';
    return 0;
}

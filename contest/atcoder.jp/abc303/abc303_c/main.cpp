#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
#include <boost/unordered_set.hpp>

const std::string YES = "Yes";
const std::string NO = "No";
const map<char, pair<int, int>> dxdy = {
    {'R', {1, 0}},
    {'L', {-1, 0}},
    {'U', {0, 1}},
    {'D', {0, -1}},
};
bool solve(int64_t N, int64_t M, int64_t H, int64_t K, std::string S, const std::vector<int64_t> &x, const std::vector<int64_t> &y)
{
    boost::unordered_set<pair<int, int>> items(M);
    REP(i, M)
    {
        items.insert({x[i], y[i]});
    }

    pair<int, int> pos = {0, 0};
    for (auto direction : S)
    {
        pos = {pos.first + dxdy.at(direction).first, pos.second + dxdy.at(direction).second};
        H--;
        if (H < 0)
        {
            return false;
        }
        else if (items.count(pos) and H < K)
        {
            H = K;
            items.erase(pos);
        }
    }
    return true;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, M, H, K;
    std::string S;
    std::cin >> N >> M >> H >> K >> S;
    std::vector<int64_t> x(M), y(M);
    REP(i, M)
    {
        std::cin >> x[i] >> y[i];
    }
    auto ans = solve(N, M, H, K, S, x, y);
    std::cout << (ans ? YES : NO) << '\n';
    return 0;
}

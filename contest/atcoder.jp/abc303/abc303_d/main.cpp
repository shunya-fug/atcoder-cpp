#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t X, int64_t Y, int64_t Z, std::string S)
{
    // dp[文字数][CapsLock] = その文字まで一致させるのに必要な最短の時間
    vector<vector<int64_t>> dp(S.size() + 1, vector<int64_t>(2, 1e18));
    dp[0][0] = 0;
    REP(i, S.size())
    {
        if (S[i] == 'a')
        {
            dp[i + 1][0] = min({dp[i + 1][0], dp[i][0] + X, dp[i][1] + Z + X});
            dp[i + 1][1] = min({dp[i + 1][1], dp[i][1] + Y, dp[i][0] + Z + Y});
        }
        if (S[i] == 'A')
        {
            dp[i + 1][0] = min({dp[i + 1][0], dp[i][0] + Y, dp[i][1] + Z + Y});
            dp[i + 1][1] = min({dp[i + 1][1], dp[i][1] + X, dp[i][0] + Z + X});
        }
    }
    return *ranges::min_element(dp[S.size()]);
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t X, Y, Z;
    std::string S;
    std::cin >> X >> Y >> Z >> S;
    auto ans = solve(X, Y, Z, S);
    std::cout << ans << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, int64_t K, const std::vector<int64_t> &A)
{
    unordered_map<int64_t, int64_t> ball_count;
    for (auto a : A)
    {
        ball_count[a]++;
    }
    vector<int64_t> counts;
    for (auto n : ball_count | views::values)
    {
        counts.push_back(n);
    }
    ranges::sort(counts, ranges::greater());

    int64_t ans = 0;
    for (auto n : counts | views::drop(K))
    {
        ans += n;
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    int64_t K;
    std::cin >> N;
    std::vector<int64_t> A(N);
    std::cin >> K;
    REP(i, N)
    {
        std::cin >> A[i];
    }
    auto ans = solve(N, K, A);
    std::cout << ans << '\n';
    return 0;
}

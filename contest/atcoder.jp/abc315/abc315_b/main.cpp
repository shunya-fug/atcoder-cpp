#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

std::pair<int64_t, int64_t> solve(int M, const std::vector<int64_t> &D)
{
    int64_t a = 0, b = 0;
    int64_t target = accumulate(ALL(D), 1LL) / 2;
    REP(i, M)
    {
        if (target <= D[i])
        {
            return {i + 1, target};
        }
        target -= D[i];
    }
    return {a, b};
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int M;
    std::cin >> M;
    std::vector<int64_t> D(M);
    REP(i, M)
    {
        std::cin >> D[i];
    }
    auto [a, b] = solve(M, D);
    std::cout << a << ' ' << b << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

std::string solve(int N, int64_t M, std::string S, const std::vector<int64_t> &C)
{
    vector<deque<char>> chars(M);
    REP(i, N)
    {
        chars[C[i] - 1].push_back(S[i]);
    }
    REP(i, M)
    {
        rotate(chars[i].rbegin(), chars[i].rbegin() + 1, chars[i].rend());
    }
    string ans = "";
    for (auto c : C)
    {
        ans.push_back(chars[c - 1].front());
        chars[c - 1].pop_front();
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    int64_t M;
    std::string S;
    std::cin >> N;
    std::vector<int64_t> C(N);
    std::cin >> M >> S;
    REP(i, N)
    {
        std::cin >> C[i];
    }
    auto ans = solve(N, M, S, C);
    std::cout << ans << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

vector<int64_t> solve(int N, int Q, std::deque<int64_t> &A, const std::vector<int64_t> &T, const std::vector<int64_t> &x, const std::vector<int64_t> &y)
{
    vector<int64_t> ans;
    REP(i, Q)
    {
        switch (T[i])
        {
        case 1:
        {
            iter_swap(A.begin() + x[i] - 1, A.begin() + y[i] - 1);
        }
        break;
        case 2:
        {
            int64_t last = A.back();
            A.pop_back();
            A.push_front(last);
        }
        break;
        case 3:
        {
            ans.push_back(A[x[i] - 1]);
        }
        break;
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, Q;
    std::cin >> N;
    std::deque<int64_t> A(N);
    std::cin >> Q;
    std::vector<int64_t> T(Q), x(Q), y(Q);
    REP(i, N)
    {
        std::cin >> A[i];
    }
    REP(i, Q)
    {
        std::cin >> T[i] >> x[i] >> y[i];
    }
    for (auto ans : solve(N, Q, A, T, x, y))
    {
        std::cout << ans << '\n';
    }
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

std::string solve(int64_t N, int64_t K, std::string S)
{
    string ans;
    priority_queue<
        pair<char, int>,
        vector<pair<char, int>>,
        greater<>>
        Q;
    // 現在の文字のindex
    int pos = 0;
    REP(i, N)
    {
        Q.push({S[i], i});
        // 最低K文字を保証するため、iがN-K以上の時からqueueから取り出し始める
        if (N - K <= i)
        {
            while (!Q.empty())
            {
                auto [c, j] = Q.top();
                Q.pop();
                // 現在の文字のindex以降の場合は答えに追加
                if (pos <= j)
                {
                    pos = j + 1;
                    ans.push_back(c);
                    break;
                }
            }
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, K;
    std::string S;
    std::cin >> N >> K >> S;
    auto ans = solve(N, K, S);
    std::cout << ans << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

std::vector<std::int64_t> solve(int N, const std::vector<std::string> &S)
{
    vector<int64_t> ans;
    map<string, int64_t> register_count;
    REP(i, N)
    {
        auto s = S[i];
        if (register_count.contains(s))
        {
            register_count.at(s)++;
            continue;
        }

        register_count.insert({s, 0});
        ans.push_back(i + 1);
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<std::string> S(N);
    REP(i, N)
    {
        std::cin >> S[i];
    }
    for (auto ans : solve(N, S))
    {
        std::cout << ans << '\n';
    }
    return 0;
}

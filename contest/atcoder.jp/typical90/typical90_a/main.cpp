#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, int64_t L, int64_t K, const std::vector<int64_t> &A)
{
    const auto is_correct = [&](const auto score)
    {
        long long cnt = 0, pre = 0;
        for (auto a : A)
        {
            if (a - pre >= score && L - a >= score)
            {
                cnt += 1;
                pre = a;
            }
        }
        if (cnt >= K)
            return true;
        return false;
    };
    int64_t left = -1, right = L + 1;
    while (right - left > 1)
    {
        const int64_t mid = left + (right - left) / 2;
        if (is_correct(mid))
        {
            left = mid;
        }
        else
        {
            right = mid;
        }
    }
    return left;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    int64_t L, K;
    std::cin >> N;
    std::vector<int64_t> A(N);
    std::cin >> L >> K;
    REP(i, N)
    {
        std::cin >> A[i];
    }
    auto ans = solve(N, L, K, A);
    std::cout << ans << '\n';
    return 0;
}

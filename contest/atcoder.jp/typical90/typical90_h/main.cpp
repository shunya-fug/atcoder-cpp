#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

constexpr int64_t MOD = 1000000007;
int64_t solve(int64_t N, std::string S)
{
    string atcoder = "atcoder";
    vector<int64_t> dp(atcoder.size(), 0);
    REP(i, S.size())
    {
        auto atcoder_index = atcoder.find(S[i]);
        if (atcoder_index != string::npos)
        {
            if (S[i] == atcoder.front())
            {
                dp[atcoder_index]++;
            }
            else
            {
                dp[atcoder_index] += dp[atcoder_index - 1];
            }
            dp[atcoder_index] %= MOD;
        }
    }

    return dp.back();
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N;
    std::string S;
    std::cin >> N >> S;
    auto ans = solve(N, S);
    std::cout << ans << '\n';
    return 0;
}

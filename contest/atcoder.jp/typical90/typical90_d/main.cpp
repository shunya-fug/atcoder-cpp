#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
#include <eigen3/Eigen/Dense>

Eigen::MatrixXi solve(int H, int W, Eigen::MatrixXi A)
{
    Eigen::MatrixXi ans(H, W);
    REP(i, H)
    {
        REP(j, W)
        {
            ans(i, j) = A.row(i).sum() + A.col(j).sum() - A(i, j);
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int H, W;
    std::cin >> H >> W;
    Eigen::MatrixXi A(H, W);
    REP(i, H)
    {
        REP(j, W)
        {
            std::cin >> A(i, j);
        }
    }
    auto ans = solve(H, W, A);
    std::cout << ans << '\n';
    return 0;
}

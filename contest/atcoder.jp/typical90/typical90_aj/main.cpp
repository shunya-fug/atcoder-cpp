#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

auto solve(int N, int Q, const std::vector<int64_t> &x, const std::vector<int64_t> &y, const std::vector<int64_t> &q)
{
    vector<int64_t> X(N), Y(N), ans(Q);
    int64_t X_min = 1e18,
            X_max = -X_min,
            Y_min = X_min,
            Y_max = -Y_min;
    REP(i, N)
    {
        X[i] = x[i] + y[i];
        Y[i] = x[i] - y[i];
        X_min = min(X_min, X[i]);
        X_max = max(X_max, X[i]);
        Y_min = min(Y_min, Y[i]);
        Y_max = max(Y_max, Y[i]);
    }

    REP(i, Q)
    {
        ans[i] = max({abs(X[q[i] - 1] - X_min), abs(X[q[i] - 1] - X_max), abs(Y[q[i] - 1] - Y_min), abs(Y[q[i] - 1] - Y_max)});
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, Q;
    std::cin >> N >> Q;
    std::vector<int64_t> x(N), y(N), q(Q);
    REP(i, N)
    {
        std::cin >> x[i] >> y[i];
    }
    REP(i, Q)
    {
        std::cin >> q[i];
    }
    auto ans = solve(N, Q, x, y, q);
    REP(i, Q)
    {
        std::cout << ans[i] << '\n';
    }
    return 0;
}

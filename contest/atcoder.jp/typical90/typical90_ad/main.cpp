#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t N, int64_t K)
{
    vector<int64_t> cnt(N + 1);
    REP3(i, 2, N + 1)
    {
        if (cnt[i] != 0)
        {
            continue;
        }
        for (auto j = i; j <= N; j += i)
        {
            cnt[j] += 1;
        }
    }

    return ranges::count_if(cnt, [&](auto n)
                            { return n >= K; });
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, K;
    std::cin >> N >> K;
    auto ans = solve(N, K);
    std::cout << ans << '\n';
    return 0;
}

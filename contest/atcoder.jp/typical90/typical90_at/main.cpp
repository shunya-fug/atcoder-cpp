#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

const int64_t MOD = 46;

int64_t solve(int N, const std::vector<int64_t> &A, const std::vector<int64_t> &B, const std::vector<int64_t> &C)
{
    vector<int64_t> A_mod46_count(MOD, 0), B_mod46_count(MOD, 0), C_mod46_count(MOD, 0);
    REP(i, N)
    {
        A_mod46_count[A[i] % MOD]++;
        B_mod46_count[B[i] % MOD]++;
        C_mod46_count[C[i] % MOD]++;
    }

    int64_t ans = 0;
    REP(i, MOD)
    {
        REP(j, MOD)
        {
            REP(k, MOD)
            {
                if ((i + j + k) % MOD == 0)
                {
                    ans += A_mod46_count[i] * B_mod46_count[j] * C_mod46_count[k];
                }
            }
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<int64_t> A(N), B(N), C(N);
    REP(i, N)
    {
        std::cin >> A[i];
    }
    REP(i, N)
    {
        std::cin >> B[i];
    }
    REP(i, N)
    {
        std::cin >> C[i];
    }
    auto ans = solve(N, A, B, C);
    std::cout << ans << '\n';
    return 0;
}

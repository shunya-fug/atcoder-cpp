#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, const std::vector<int64_t> &a, const std::vector<int64_t> &b)
{
    vector<vector<int64_t>> G(N + 1);
    REP(i, a.size())
    {
        G[a[i]].push_back(b[i]);
        G[b[i]].push_back(a[i]);
    }

    vector<int64_t> dp(N + 1);
    auto dfs = [&](auto &self, int64_t pre, int64_t from) -> void
    {
        dp[from] = 1;
        for (auto to : G[from])
        {
            if (to != pre)
            {
                self(self, from, to);
                dp[from] += dp[to];
            }
        }
    };
    dfs(dfs, 0, 1);

    int64_t ans = 0;
    REP(i, a.size())
    {
        auto r = min(dp[a[i]], dp[b[i]]);
        ans += r * (N - r);
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<int64_t> a(N - 1), b(N - 1);
    REP(i, N - 1)
    {
        std::cin >> a[i] >> b[i];
    }
    auto ans = solve(N, a, b);
    std::cout << ans << '\n';
    return 0;
}

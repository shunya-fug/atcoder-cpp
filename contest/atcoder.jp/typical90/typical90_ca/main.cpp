#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

const string YES = "Yes", NO = "No";
int64_t solve(int H, int W, std::vector<vector<int64_t>> &A, const std::vector<vector<int64_t>> &B)
{
    int64_t ans = 0;
    REP(i, H - 1)
    {
        REP(j, W - 1)
        {
            auto diff = B[i][j] - A[i][j];
            A[i][j] += diff;
            A[i + 1][j] += diff;
            A[i][j + 1] += diff;
            A[i + 1][j + 1] += diff;
            ans += abs(diff);
        }
    }

    REP(i, H)
    {
        REP(j, W)
        {
            if (A[i][j] != B[i][j])
            {
                return -1;
            }
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int H, W;
    std::cin >> H >> W;
    std::vector<vector<int64_t>> A(H, vector<int64_t>(W)), B(H, vector<int64_t>(W));
    REP(n, 2)
    {
        REP(i, H)
        {
            REP(j, W)
            {
                std::cin >> (n == 0 ? A[i][j] : B[i][j]);
            }
        }
    }
    auto ans = solve(H, W, A, B);
    if (ans == -1)
    {
        std::cout << NO << '\n';
    }
    else
    {
        std::cout << YES << '\n';
        std::cout << ans << '\n';
    }
    return 0;
}

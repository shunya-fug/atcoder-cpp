#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t K)
{
    vector<int64_t> factors;
    for (int64_t i = 1; i * i <= K; i++)
    {
        if (K % i == 0)
        {
            factors.push_back(i);
            if (i != K / i)
            {
                factors.push_back(K / i);
            }
        }
    }
    ranges::sort(factors);

    int64_t ans = 0;
    REP(i, factors.size())
    {
        REP3(j, i, factors.size())
        {
            int64_t a = factors[i],
                    b = factors[j];
            if (a * b == 0)
            {
                continue;
            }
            int64_t c = K / (a * b);
            if (b > c)
            {
                break;
            }
            if (a * b * c == K)
            {
                ans++;
            }
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t K;
    std::cin >> K;
    auto ans = solve(K);
    std::cout << ans << '\n';
    return 0;
}

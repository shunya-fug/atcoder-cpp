#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

vector<int64_t> solve(int64_t W, int64_t N, const std::vector<int64_t> &L, const std::vector<int64_t> &R)
{
    vector<int64_t> heights(W + 1, 0), ans(N);
    REP(i, N)
    {
        auto h = *max_element(begin(heights) + L[i], begin(heights) + R[i] + 1) + 1;
        ans[i] = h;
        for (auto j = L[i]; j <= R[i]; j++)
        {
            heights[j] = h;
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t W, N;
    std::cin >> W >> N;
    std::vector<int64_t> L(N), R(N);
    REP(i, N)
    {
        std::cin >> L[i] >> R[i];
    }
    auto ans = solve(W, N, L, R);
    REP(i, N)
    {
        std::cout << ans[i] << '\n';
    }
    return 0;
}

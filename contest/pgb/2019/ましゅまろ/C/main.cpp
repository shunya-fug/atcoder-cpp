#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t N, int64_t M, vector<int64_t> &a, vector<int64_t> &b)
{
    vector<int> pins(M, 1);
    // first: t, second: j
    priority_queue<pair<int64_t, int64_t>, vector<pair<int64_t, int64_t>>, greater<>> Q;
    REP(j, N)
    {
        Q.push({a[j] + b[j], j});
    }

    int64_t ans = 0;
    while (!Q.empty())
    {
        auto [t, j] = Q.top();
        Q.pop();
        if (0 <= j - t and j - t < (int)pins.size() and pins[j - t] == 1)
        {
            pins[j - t] = 0;
            ans++;
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, M;
    std::cin >> N >> M;
    vector<int64_t> a(N), b(N);
    REP(i, N)
    {
        cin >> a[i] >> b[i];
    }
    auto ans = solve(N, M, a, b);
    std::cout << ans << '\n';
    return 0;
}

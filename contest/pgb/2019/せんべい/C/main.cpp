#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

const string YES = "Yes";
const string NO = "No";
vector<bool> solve(int64_t N, int64_t M, const vector<int64_t> &A, const vector<int64_t> &B)
{
    vector<vector<int64_t>> G(N + 1);
    REP(i, M)
    {
        G[B[i]].push_back(A[i]);
    }

    vector<int64_t> cnt(N + 1, 1e18);
    cnt[0] = 0;
    queue<int64_t> Q;
    Q.push(0);
    while (!Q.empty())
    {
        auto from = Q.front();
        Q.pop();

        for (auto to : G[from])
        {
            if (cnt[from] + 1 < cnt[to])
            {
                cnt[to] = cnt[from] + 1;
                Q.push(to);
            }
        }
    }

    vector<bool> ans(N);
    REP(i, N)
    {
        ans[i] = cnt[i + 1] <= 3;
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, M;
    std::cin >> N >> M;
    vector<int64_t> A(M), B(M);
    REP(i, M)
    {
        cin >> A[i] >> B[i];
    }
    for (auto ans : solve(N, M, A, B))
    {
        std::cout << (ans ? YES : NO) << '\n';
    }
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
#include <atcoder/modint.hpp>

using mint = atcoder::modint998244353;
int64_t solve(int64_t N, int64_t M, int64_t A, int64_t B)
{
    // dp[x][y] = その点までの経路の本数
    vector<vector<mint>> dp(N + 1, vector<mint>(M + 1));
    dp[0][0] = 1;
    REP(x, dp.size())
    REP(y, dp.front().size())
    {
        if (x == A and y == B)
        {
            continue;
        }

        if (x + 1 <= N)
        {
            dp[x + 1][y] += dp[x][y];
        }
        if (y + 1 <= M)
        {
            dp[x][y + 1] += dp[x][y];
        }
    }
    return dp[N][M].val();
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, M, A, B;
    cin >> N >> M >> A >> B;
    auto ans = solve(N, M, A, B);
    std::cout << ans << '\n';
    return 0;
}

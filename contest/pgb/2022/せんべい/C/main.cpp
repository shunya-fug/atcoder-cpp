#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t N, vector<int64_t> &A)
{
    queue<int64_t> Q;
    Q.push(0);
    while (!Q.empty())
    {
        auto i = Q.front();
        Q.pop();
        if (A[i] != 1)
        {
            if (i + 1 < (int)A.size())
            {
                Q.push(i + 1);
            }
            continue;
        }

        while (i + 1 < (int)A.size() and A[i + 1] == A[i] + 1)
        {
            A[i] = 0;
            i++;
        }
        A[i] = 0;
        if (i + 1 < (int)A.size())
        {
            Q.push(i + 1);
        }
    }

    return reduce(ALL(A));
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N;
    std::cin >> N;
    vector<int64_t> A(N);
    REP(i, N)
    {
        cin >> A[i];
    }
    auto ans = solve(N, A);
    std::cout << ans << '\n';
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

vector<int64_t> solve(int64_t N, const vector<int64_t> &A)
{
    vector<int64_t> A_sorted = A;
    ranges::sort(A_sorted, ranges::greater());
    unordered_set<int64_t> senbei;
    for (auto a : A_sorted | views::drop(N) | views::take(N))
    {
        senbei.insert(a);
    }

    vector<int64_t> ans;
    REP(i, A.size())
    {
        if (senbei.contains(A[i]))
        {
            ans.push_back(i + 1);
        }
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N;
    std::cin >> N;
    vector<int64_t> A(3 * N);
    REP(i, A.size())
    {
        cin >> A[i];
    }
    for (auto ans : solve(N, A))
    {
        std::cout << ans << '\n';
    }
    return 0;
}

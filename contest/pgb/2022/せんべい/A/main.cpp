#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t N, int64_t Q, const vector<int64_t> &L, const vector<int64_t> &R)
{
    // true:表, false:裏
    vector<bool> senbei(N + 1, true);
    REP(i, Q)
    {
        REP3(j, L[i], R[i] + 1)
        {
            senbei[j] = !senbei[j];
        }
    }

    return ranges::count(senbei, false);
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, Q;
    std::cin >> N >> Q;
    vector<int64_t> L(Q), R(Q);
    REP(i, Q)
    {
        cin >> L[i] >> R[i];
    }
    auto ans = solve(N, Q, L, R);
    std::cout << ans << '\n';
    return 0;
}

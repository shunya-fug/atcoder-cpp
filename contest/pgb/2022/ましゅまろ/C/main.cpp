#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

vector<int64_t> solve(int64_t N, int64_t p, int64_t q, const vector<int64_t> &a, const vector<int64_t> &b)
{
    vector<int64_t> scores(N);
    REP(i, N)
    {
        scores[i] = p * a[i] + q * b[i];
    }

    vector<int64_t> orders = scores;
    ranges::sort(orders, ranges::greater());
    orders.erase(unique(ALL(orders)), end(orders));

    vector<int64_t> ans(N);
    REP(i, N)
    {
        ans[i] = ranges::lower_bound(orders, scores[i], ranges::greater()) - begin(orders) + 1;
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, p, q;
    std::cin >> N >> p >> q;
    vector<int64_t> a(N), b(N);
    REP(i, N)
    {
        cin >> a[i] >> b[i];
    }
    for (auto ans : solve(N, p, q, a, b))
    {
        std::cout << ans << '\n';
    }
    return 0;
}

#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

vector<int64_t> solve(int64_t N, vector<int64_t> &A)
{
    vector<vector<int64_t>> ps(N);
    REP(i, A.size())
    {
        ps[A[i] - 1].push_back(i);
    }

    vector<int64_t> ans(2 * N - 1);
    for (auto p : ps)
    {
        ans[*ranges::max_element(p) - *ranges::min_element(p) - 1]++;
    }
    REP(i, ans.size() - 1)
    {
        ans[i + 1] += ans[i];
    }
    return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N;
    std::cin >> N;
    vector<int64_t> A(2 * N);
    REP(i, A.size())
    {
        cin >> A[i];
    }
    for (auto ans : solve(N, A))
    {
        std::cout << ans << '\n';
    }
    return 0;
}
